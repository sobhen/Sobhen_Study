-- Role: abhyudayatrustadmin
-- DROP ROLE abhyudayatrustadmin;

CREATE ROLE abhyudayatrustadmin LOGIN ENCRYPTED PASSWORD 'md548ec4f9ba9f9ff5054b4fbe85d35741f' SUPERUSER INHERIT CREATEDB CREATEROLE REPLICATION;
COMMENT ON ROLE abhyudayatrustadmin IS 'Abhyudaya Trust Admin Login Role';

-- Tablespace: ABHYUDAYATRUST_TS
-- DROP TABLESPACE "ABHYUDAYATRUST_TS"

CREATE TABLESPACE "ABHYUDAYATRUST_TS" OWNER abhyudayatrustadmin LOCATION 'C:\\Sobhen\\Abhyudaya Work\\Postgres_DB_Space';
COMMENT ON TABLESPACE "ABHYUDAYATRUST_TS" IS 'Abhyudaya Trust Database Tablespace';
 
-- Database: "ABHYUDAYATRUSTDB"
-- DROP DATABASE "ABHYUDAYATRUSTDB";

CREATE DATABASE "ABHYUDAYATRUSTDB"
  WITH OWNER = abhyudayatrustadmin
       ENCODING = 'UTF8'
       TABLESPACE = "ABHYUDAYATRUST_TS"
       LC_COLLATE = 'English_United States.1252'
       LC_CTYPE = 'English_United States.1252'
       CONNECTION LIMIT = -1;

COMMENT ON DATABASE "ABHYUDAYATRUSTDB" IS 'Abhyudaya Trust Database';
  
====================
DB Tables
====================
--DROP TABLE T_USER_ROLE;
DROP TABLE T_ROLE_AUTHORITIES;
DROP TABLE T_PAGE_FUNCIONS;
DROP TABLE T_PAGES;
DROP TABLE T_SUBMENU;
DROP TABLE T_MENU;
DROP TABLE T_ROLE;
DROP TABLE T_ATTENDANCE_REGISTER;
DROP TABLE T_EMPLOYEE;
DROP TABLE T_USER;
DROP TABLE T_ADDRESS;


 CREATE TABLE T_ADDRESS
 (
 	ID BIGSERIAL,
	ADDRESS_LINE1 VARCHAR(50) NOT NULL,
	ADDRESS_LINE2 VARCHAR(50),
	ADDRESS_LINE3 VARCHAR(50),
	DISTRICT VARCHAR(50) NOT NULL,
	STATE VARCHAR(50) NOT NULL,
	COUNTRY VARCHAR(50) NOT NULL,
	PIN INTEGER NOT NULL,
	CONSTRAINT PK_T_ADDRESS PRIMARY KEY (ID)	
 );
 COMMENT ON TABLE T_ADDRESS IS 'Employee Address Details';
 
CREATE TABLE T_ROLE
(
  ROLE_ID           BIGSERIAL,
  ROLE_NAME         VARCHAR(50)    NOT NULL,
  ROLE_DESC         VARCHAR(200),
  CONSTRAINT PK_T_ROLE PRIMARY KEY (ROLE_ID),
  CONSTRAINT UNK1_T_ROLE UNIQUE (ROLE_NAME)
);
COMMENT ON TABLE T_ROLE IS 'Role Definitions';

CREATE TABLE T_USER
    (
        ID BIGSERIAL,
        USER_NAME VARCHAR(20) NOT NULL,
        USER_ID VARCHAR(15) NOT NULL,
        USER_STATUS CHAR(1) NOT NULL,
        LOGIN_PASSWORD VARCHAR(200) NOT NULL,
        VALIDITY_FROM DATE NOT NULL,
        VALIDITY_TO DATE NOT NULL,        
        LAST_LOGIN_TIME TIMESTAMP,
        FAIL_LOGIN INTEGER,
        NEW_PASS_FLAG BOOLEAN NOT NULL,
        CHNG_PASS_DATE DATE,
        PASSWORD_RETRIES INTEGER,
        PASSWORD_SALT bytea,
		ROLE_ID INTEGER NOT NULL,	
        CONSTRAINT PK_T_USER PRIMARY KEY (ID),
        CONSTRAINT UNK1_T_USER UNIQUE (USER_ID),
		CONSTRAINT FK1_T_USER FOREIGN KEY (ROLE_ID) REFERENCES T_ROLE,
        CONSTRAINT CHK_USERS_NEW_PASS_FLAG CHECK (NEW_PASS_FLAG IN (true,false)),        
        CONSTRAINT CHK_USERS_USR_STATUS CHECK (USER_STATUS IN ('A','D'))
    );
   COMMENT ON TABLE T_USER IS 'User Definitions';
   COMMENT ON COLUMN T_USER.NEW_PASS_FLAG IS 'Possible values for NEW_PASS_FLAG is true or false';
   COMMENT ON COLUMN T_USER.USER_STATUS IS 'Possible values for USER_STATUS is A :: Active or D :: Deacive or L :: Locked';

 CREATE TABLE T_EMPLOYEE
    (
        ID BIGSERIAL,
        EMP_ID VARCHAR(20) NOT NULL,
        EMP_FIRST_NAME VARCHAR(15) NOT NULL,
		EMP_MIDDLE_NAME VARCHAR(15) NOT NULL,
		EMP_LAST_NAME VARCHAR(15) NOT NULL,
        EMP_STATUS CHAR(1) NOT NULL,
        JOINING_DATE DATE,
		DOB DATE NOT NULL,
		GENDER CHAR(1) NOT NULL, 
        MARK_ATTENDANCE_FLAG BOOLEAN NOT NULL,
		ADDRESS_ID INTEGER,        
        USER_ID INTEGER,	
        CONSTRAINT PK_T_EMPLOYEE PRIMARY KEY (ID),
        CONSTRAINT UNK1_T_EMPLOYEE UNIQUE (EMP_ID),
		CONSTRAINT FK1_T_EMPLOYEE FOREIGN KEY (USER_ID) REFERENCES T_USER,
		CONSTRAINT FK2_T_EMPLOYEE FOREIGN KEY (ADDRESS_ID) REFERENCES T_ADDRESS,
        CONSTRAINT CHK_EMPLOYEE_MARK_ATTENDANCE_FLAG CHECK (MARK_ATTENDANCE_FLAG IN (true,false)),        
        CONSTRAINT CHK_EMPLOYEE_EMP_STATUS CHECK (EMP_STATUS IN ('A','D')),
		CONSTRAINT CHK_EMPLOYEE_GENDER CHECK (GENDER IN ('M','F','O'))
 );
  COMMENT ON TABLE T_EMPLOYEE IS 'Employee Details';
 
  CREATE TABLE T_ATTENDANCE_REGISTER
    (
        ID BIGSERIAL,
        EMP_ID INTEGER NOT NULL,
		ATTENDANCE_DATE DATE NOT NULL,
        CHECK_IN_TIME TIMESTAMP NOT NULL,
        CHECK_OUT_TIME TIMESTAMP,  
        CONSTRAINT PK_T_ATTENDANCE_REGISTER PRIMARY KEY (ID),
        CONSTRAINT UNK1_T_ATTENDANCE_REGISTER UNIQUE (EMP_ID,ATTENDANCE_DATE),
		CONSTRAINT FK1_T_ATTENDANCE_REGISTER FOREIGN KEY (EMP_ID) REFERENCES T_EMPLOYEE      
    );
   COMMENT ON TABLE T_ATTENDANCE_REGISTER IS 'Employee daily attendance details';
   
CREATE TABLE T_MENU
(
  MENU_ID          BIGSERIAL,
  MENU             VARCHAR(50)          NOT NULL,
  SORT_ORDER       INTEGER              NOT NULL,  
  CONSTRAINT PK_T_MENU PRIMARY KEY (MENU_ID)
);
COMMENT ON TABLE T_MENU IS 'Application Menu Details';

CREATE TABLE T_SUBMENU
(
  SUBMENU_ID       BIGSERIAL,
  SUBMENU          VARCHAR(50)         NOT NULL,
  SORT_ORDER       INTEGER             NOT NULL,
  URL              VARCHAR(200)        NOT NULL,  
  MENU_ID          INTEGER             NOT NULL,
  CONSTRAINT PK_T_SUBMENU PRIMARY KEY (SUBMENU_ID),
  CONSTRAINT FK1_T_SUBMENU FOREIGN KEY (MENU_ID) REFERENCES T_MENU,
  CONSTRAINT UNK1_T_SUBMENU UNIQUE (MENU_ID,SUBMENU)
);
COMMENT ON TABLE T_SUBMENU IS 'Application Sub-Menu Details';   

CREATE TABLE T_PAGES
(
  PAGE_ID                BIGSERIAL,
  PAGE                   VARCHAR(50)     NOT NULL,
  SUBMENU_ID             INTEGER,         
  CONSTRAINT PK_T_PAGES  PRIMARY KEY (PAGE_ID),
  CONSTRAINT FK1_T_PAGES FOREIGN KEY (SUBMENU_ID) REFERENCES T_SUBMENU
);
COMMENT ON TABLE T_PAGES IS 'Application Page Details'; 

CREATE TABLE T_PAGE_FUNCIONS
(
  FUNCION_ID                BIGSERIAL,
  FUNCION                   VARCHAR(50)     NOT NULL,
  PAGE_ID                   INTEGER,         
  CONSTRAINT PK_T_PAGE_FUNCIONS  PRIMARY KEY (FUNCION_ID),
  CONSTRAINT FK1_T_PAGES FOREIGN KEY (PAGE_ID) REFERENCES T_PAGES
);
COMMENT ON TABLE T_PAGE_FUNCIONS IS 'Page level function Details'; 

CREATE TABLE T_ROLE_AUTHORITIES
(
  SUBMENU_ID    INTEGER    NOT NULL,
  ROLE_ID       INTEGER    NOT NULL,
  CONSTRAINT PK_T_ROLE_AUTHORITIES  PRIMARY KEY (SUBMENU_ID,ROLE_ID),
  CONSTRAINT FK1_T_ROLE_AUTHORITIES FOREIGN KEY (SUBMENU_ID) REFERENCES T_SUBMENU,
  CONSTRAINT FK2_T_ROLE_AUTHORITIES FOREIGN KEY (ROLE_ID) REFERENCES T_ROLE  
);
COMMENT ON TABLE T_ROLE_AUTHORITIES IS 'Role wise authorities Definition'; 

--CREATE TABLE T_USER_ROLE
--( 
--  ROLE_ID           INTEGER                    NOT NULL,
 -- USER_ID           INTEGER                    NOT NULL,
 -- CONSTRAINT PK_T_USER_ROLE  PRIMARY KEY (ROLE_ID,USER_ID),
  --CONSTRAINT FK1_T_USER_ROLE FOREIGN KEY (USER_ID) REFERENCES T_USER,
 -- CONSTRAINT FK2_T_USER_ROLE FOREIGN KEY (ROLE_ID) REFERENCES T_ROLE  
--);
--COMMENT on TABLE T_USER_ROLE IS 'User and Role combination';
